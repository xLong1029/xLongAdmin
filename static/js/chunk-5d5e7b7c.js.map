{"version":3,"sources":["webpack:///./src/api/profile.js","webpack:///./src/views/Profile/ChangePwd.vue?e248","webpack:///src/views/Profile/ChangePwd.vue","webpack:///./src/views/Profile/ChangePwd.vue?1183","webpack:///./src/views/Profile/ChangePwd.vue","webpack:///./src/common/validate.js"],"names":["GetUserInfo","token","query","BmobServer","GetQuery","equalTo","select","Promise","resolve","reject","find","then","res","code","data","catch","err","EditProfile","params","id","EditOne","ChangePwd","oldPassword","length","set","newPassword","saveAll","msg","render","_vm","this","_h","$createElement","_c","_self","staticClass","staticStyle","ref","attrs","editForm","validate","model","value","callback","$$v","$set","expression","on","$event","submit","_v","staticRenderFns","component","ValidPassword","password","required","Error","Common","regPassword","test","ValidPwdCheck","pwdCheck","ValidBirthDate","birhtDate","nowDate","Date","compare","CompareDate","ValidProvince","province","ValidAgreement","agerrment","errorText","ValidCode","ValidUserName","userName","regEmail","Mobile","ValidRangeDate","startDate","endDate"],"mappings":"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","file":"static/js/chunk-5d5e7b7c.js","sourcesContent":["/*\r\n * 功能 : 封装数据交互api接口(数据使用的是bmob云数据，请求方法使用bmob云规定方法)。\r\n * 用处 : 用户信息操作相关api\r\n * 作者 : 罗永梅（381612175@qq.com）\r\n * 日期 : 2019-4-29\r\n * 版本 : version 2.0\r\n */\r\nimport BmobServer from 'bmob/bmob-server.js'\r\n\r\nexport default {\r\n    // 获取用户信息\r\n    // token: 用户token参数\r\n    GetUserInfo: (token) => {\r\n        let query = BmobServer.GetQuery('_User');\r\n        query.equalTo('token', '==', token);\r\n        // 只返回select的字段值\r\n        query.select('username', 'role', 'userFace', 'nickName', 'realName', 'gender');\r\n        return new Promise((resolve, reject) => {\r\n            query.find().then(res => {\r\n                resolve({ code: 200, data: res[0] })\r\n            })\r\n            .catch(err => reject(err));\r\n\t\t});\r\n    },\r\n    // 修改个人资料\r\n    // params: 修改的参数对象，id: 对象id\r\n    EditProfile: (params, id) => {\r\n        return new Promise((resolve, reject) => {\r\n            BmobServer.EditOne('_User', id, params).then(res => resolve(res)).catch(err => reject(err))\r\n        });\r\n    },\r\n    // 修改密码\r\n    // params: 修改的参数对象，token: token值\r\n    ChangePwd: (params, token) => {\r\n        let query = BmobServer.GetQuery('_User');\r\n        // 根据唯一键查询对象\r\n        query.equalTo('token', '==', token);\r\n        query.equalTo('password', '==', params.oldPassword);\r\n\r\n        return new Promise((resolve, reject) => {\r\n            query.find().then(res => {\r\n                if(res.length){\r\n                    // 只能批量修改\r\n                    res.set('password', params.newPassword);\r\n                    res.saveAll().then(() => resolve({ code: 200, msg: '操作成功！' })).catch(err => reject(err));\r\n                }\r\n                else{\r\n                    resolve({ code: 404, msg: '旧密码不正确！' });\r\n                }\r\n            }).catch(err => reject(err));\r\n        });\r\n    }\r\n}\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"g-content\"},[_c('div',{staticStyle:{\"width\":\"500px\"}},[_c('Form',{ref:\"editForm\",attrs:{\"model\":_vm.editForm,\"rules\":_vm.validate,\"label-width\":100}},[_c('Form-item',{attrs:{\"prop\":\"oldPassword\",\"label\":\"旧密码：\"}},[_c('Input',{attrs:{\"type\":\"password\",\"placeholder\":\"请输入旧密码\"},model:{value:(_vm.editForm.oldPassword),callback:function ($$v) {_vm.$set(_vm.editForm, \"oldPassword\", $$v)},expression:\"editForm.oldPassword\"}})],1),_c('Form-item',{attrs:{\"prop\":\"newPassword\",\"label\":\"新密码：\"}},[_c('Input',{attrs:{\"type\":\"password\",\"placeholder\":\"请输入新密码\"},model:{value:(_vm.editForm.newPassword),callback:function ($$v) {_vm.$set(_vm.editForm, \"newPassword\", $$v)},expression:\"editForm.newPassword\"}})],1),_c('Form-item',{attrs:{\"prop\":\"passwdCheck\",\"label\":\"确认密码：\"}},[_c('Input',{attrs:{\"type\":\"password\",\"placeholder\":\"请输入确认密码\"},model:{value:(_vm.editForm.passwdCheck),callback:function ($$v) {_vm.$set(_vm.editForm, \"passwdCheck\", $$v)},expression:\"editForm.passwdCheck\"}})],1),_c('Form-item',[_c('Button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.submit('editForm')}}},[_vm._v(\"确认修改\")])],1)],1)],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"g-content\">\r\n        <div style=\"width:500px;\">\r\n            <Form ref=\"editForm\" :model=\"editForm\" :rules=\"validate\" :label-width=\"100\">\r\n                <Form-item prop=\"oldPassword\" label=\"旧密码：\">\r\n                    <Input type=\"password\" v-model=\"editForm.oldPassword\" placeholder=\"请输入旧密码\" />\r\n                </Form-item>\r\n                <Form-item prop=\"newPassword\" label=\"新密码：\">\r\n                    <Input type=\"password\" v-model=\"editForm.newPassword\" placeholder=\"请输入新密码\" />\r\n                </Form-item>\r\n                <Form-item prop=\"passwdCheck\" label=\"确认密码：\">\r\n                    <Input type=\"password\" v-model=\"editForm.passwdCheck\" placeholder=\"请输入确认密码\" />\r\n                </Form-item>\r\n                <Form-item>\r\n                    <Button type=\"primary\" @click=\"submit('editForm')\">确认修改</Button>\r\n                </Form-item>\r\n            </Form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    // 验证方法\r\n\timport Validate from 'common/validate.js'\r\n\t// Api方法\r\n    import Api from 'api/profile.js'\r\n    // Vuex\r\n    import { mapGetters } from 'vuex'\r\n\r\n\texport default {\r\n        computed: {\r\n            ...mapGetters([ 'token' ])\r\n        },\r\n\t\tdata(){\r\n\t\t\treturn {\r\n\t\t\t\t// 表单信息\r\n\t\t\t\teditForm:{\r\n                    // 旧密码\r\n                    oldPassword: '',\r\n\t\t\t\t\t// 新密码\r\n\t\t\t\t\tnewPassword: '',\r\n\t\t\t\t\t// 确认密码\r\n\t\t\t\t\tpasswdCheck: '',\r\n\t\t\t\t},\r\n\t\t\t\t// 验证规则\r\n\t\t\t\tvalidate: {\r\n                    oldPassword: [{\r\n                        validator: (rule, value, callback) => {\r\n                            Validate.ValidPassword(value, callback, true);\r\n                        },\r\n                        trigger: 'blur',\r\n                        required: true,\r\n                    }],\r\n                    newPassword:[{\r\n                        validator: (rule, value, callback) => {\r\n                            Validate.ValidPassword(value, callback, true);\r\n                        },\r\n                        trigger: 'blur',\r\n                        required: true,\r\n                    }],\r\n                    passwdCheck:[{\r\n                        validator: (rule, value, callback) => {\r\n                            Validate.ValidPwdCheck(this.editForm.newPassword, value, callback, true);\r\n                        },\r\n                        trigger: 'blur',\r\n                        required: true,\r\n                    }],\r\n                }\r\n\t\t\t}\r\n        },\r\n        created(){\r\n            // 设置面包屑路径\r\n            this.$store.commit('SET_BREADCRUMB', [\r\n                { name: '首页', path: '/Home' },\r\n                { name: '修改密码', path: '/ChangePwd' }\r\n            ]);\r\n        },\r\n        methods:{\r\n            // 提交表单\r\n            submit(form){\r\n                this.$refs[form].validate((valid) => {\r\n                    if (valid) {\r\n                        if(this.editForm.oldPassword == this.editForm.newPassword){\r\n                            this.$Message.error('旧密码和新密码不能相同！');\r\n                            return false;\r\n                        }\r\n\r\n                        // 修改密码 Api\r\n                        Api.ChangePwd(this.editForm, this.token)\r\n                        .then(res => {\r\n                            if(res.code == 200){\r\n                                // 登出 action方法\r\n                                this.$store.dispatch('LogOut')\r\n                                .then(res => {\r\n                                    this.$Message.success('密码修改成功!请重新登录');\r\n                                    this.$router.push({ name: 'Login' });\r\n                                })\r\n                                .catch(err => console.log(err))\r\n                            }\r\n                            else if(res.code == 404) this.$Message.warning(res.msg);\r\n                            else this.$Message.error('密码修改失败！');\r\n                        })\r\n                        .catch(err => console.log(err));\r\n                    }\r\n                    else this.$Message.error('提交失败！填写有误');\r\n                })\r\n            },\r\n        }\r\n\t}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChangePwd.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChangePwd.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ChangePwd.vue?vue&type=template&id=12bd33f6&scoped=true&\"\nimport script from \"./ChangePwd.vue?vue&type=script&lang=js&\"\nexport * from \"./ChangePwd.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"12bd33f6\",\n  null\n  \n)\n\nexport default component.exports","/*\r\n * 功能 : 封装与iView框架相关的表单验证方法\r\n * 作者 : 罗永梅（381612175@qq.com）\r\n * 日期 : 2017-10-25\r\n * 版本 : version 2.0\r\n */\r\nimport Common from './common.js'\r\nimport { CompareDate } from 'utils'\r\n\r\nexport default {\r\n    // 验证密码\r\n    ValidPassword: (password, callback, required) => {\r\n        // 密码为空\r\n        if(password == ''){\r\n            // 若必填\r\n            if(required) return callback(new Error('密码不能为空'));\r\n            else return callback();\r\n        }\r\n        else{\r\n            if(!Common.regPassword.test(password)) return callback(new Error('密码格式为6-12位，字母、数字和下划线的组合'));\r\n            else return callback();\r\n        }\r\n    },\r\n    // 验证确认密码\r\n    ValidPwdCheck: (password, pwdCheck, callback, required) => {\r\n        // 确认密码为空\r\n        if(pwdCheck == ''){\r\n            // 若必填\r\n            if(required) return callback(new Error('确认密码不能为空'));\r\n            else {\r\n                if(password != '') return callback(new Error('确认密码不能为空'));\r\n                else return callback();\r\n            }\r\n        }\r\n        else{\r\n            if(password != pwdCheck){\r\n                return callback(new Error('两次输入密码不一致'));\r\n            }\r\n            else return callback();\r\n        }\r\n    },\r\n    // 验证出生日期\r\n    ValidBirthDate: (birhtDate, callback, required) => {\r\n        // 出生日期为空\r\n        if(birhtDate == ''){\r\n            // 若必填\r\n            if(required) return callback(new Error('出生日期不能为空'));\r\n            else return callback();\r\n        }\r\n        else{\r\n            let nowDate = new Date();\r\n            const compare = CompareDate(birhtDate, nowDate);\r\n            if (!compare) return callback(new Error('出生日期不能大于当前日期'));\r\n            else return callback();\r\n        }\r\n    },\r\n    // 验证所在省市\r\n    ValidProvince: (province, callback, required) => {\r\n        // 若必填\r\n        if(required){\r\n            // 省份为空\r\n            if(province == ''){\r\n                return callback(new Error('所在省份不能为空'));\r\n            }\r\n            else return callback();\r\n        }\r\n        else return callback();\r\n    },\r\n    // 验证是否同意协议\r\n    ValidAgreement: (agerrment, errorText, callback, required) => {\r\n        if(required){\r\n            if (!agerrment) {\r\n                return callback(new Error(errorText));\r\n            }\r\n            else return callback();\r\n        }\r\n        else return callback();\r\n    },\r\n    // 验证验证码\r\n    ValidCode: (code, callback, required) => {\r\n        if(required){\r\n            if(!code){\r\n                return callback(new Error('验证码不能为空'));\r\n            }\r\n            else return callback();\r\n        }\r\n        else return callback();\r\n    },\r\n    // 验证用户名\r\n    ValidUserName: (userName, callback, required) => {\r\n        if(required){\r\n            if(!userName){\r\n                return callback(new Error('用户名不能为空'));\r\n            }\r\n            else if (!Common.regEmail.test(userName) && !Common.regEmail.Mobile.test(userName)) {\r\n                return callback(new Error('用户名格式不正确'));\r\n            }\r\n            else return callback();\r\n        }\r\n        else return callback();\r\n    },\r\n    // 验证日期范围选择\r\n    ValidRangeDate: (startDate, endDate, callback, required) => {\r\n        // 若必填\r\n        if(required && startDate == '') return callback(new Error('开始日期不能为空'));\r\n        if(required && endDate == '') return callback(new Error('结束日期不能为空'));\r\n        else{\r\n            if(startDate){\r\n                let nowDate = new Date();\r\n                const compare = CompareDate(startDate, nowDate);\r\n\r\n                if (!compare) return callback(new Error('开始日期不能大于当前日期'));\r\n                else{\r\n                    if(endDate){\r\n                        const compare = CompareDate(startDate, endDate);\r\n                        if (!compare) return callback(new Error('结束日期不能小于开始日期'));\r\n                        else return callback();\r\n                    }\r\n                    else return callback();\r\n                }\r\n            }\r\n            else{\r\n                if(endDate) return callback(new Error('请选择开始日期'));\r\n                else return callback();\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""}